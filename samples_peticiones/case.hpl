<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>case</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <parameters>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2022/11/27 20:30:11.247</created_date>
    <modified_user>-</modified_user>
    <modified_date>2022/11/27 20:30:11.247</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
    <notepad>
      <note>Esta ETL lo que hace es leer un csv como origen de datos y luego distribulle 
en dos js steps para hacer los case (asi paralelizas los case e iria mas rapido) luego lo que se hace
es un append para a√±adir el flujo secundario al principal</note>
      <xloc>96</xloc>
      <yloc>176</yloc>
      <width>516</width>
      <heigth>58</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>14</fontcolorred>
      <fontcolorgreen>58</fontcolorgreen>
      <fontcolorblue>90</fontcolorblue>
      <backgroundcolorred>201</backgroundcolorred>
      <backgroundcolorgreen>232</backgroundcolorgreen>
      <backgroundcolorblue>251</backgroundcolorblue>
      <bordercolorred>14</bordercolorred>
      <bordercolorgreen>58</bordercolorgreen>
      <bordercolorblue>90</bordercolorblue>
    </notepad>
  </notepads>
  <order>
    <hop>
      <from>CSV file input</from>
      <to>JavaScript</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>CSV file input</from>
      <to>JavaScript 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>JavaScript</from>
      <to>Append streams</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Append streams</from>
      <to>Write to log</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>JavaScript 2</from>
      <to>Append streams</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <transform>
    <name>Append streams</name>
    <type>Append</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <head_name>JavaScript</head_name>
    <tail_name>JavaScript 2</tail_name>
    <attributes/>
    <GUI>
      <xloc>848</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform>
    <name>CSV file input</name>
    <type>CSVInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <filename>C:\Users\rafael.valenzuela\Downloads\HOP.csv</filename>
    <filename_field/>
    <rownum_field/>
    <include_filename>N</include_filename>
    <separator>,</separator>
    <enclosure>"</enclosure>
    <header>Y</header>
    <buffer_size>50000</buffer_size>
    <lazy_conversion>Y</lazy_conversion>
    <add_filename_result>N</add_filename_result>
    <parallel>N</parallel>
    <newline_possible>N</newline_possible>
    <encoding/>
    <fields>
      <field>
        <name>id</name>
        <type>Integer</type>
        <format>#</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <length>15</length>
        <precision>0</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>firstname</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <length>11</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>lastname</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <length>10</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>email</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <length>32</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>496</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform>
    <name>JavaScript</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

var letter = lower(firstname.charAt(0));

switch (letter) {
 case "a": text = "Banana is good! A";  break;
 case "b": text = "Banana is good! B";  break;
 case "c": text = "Banana is good! C";  break;
 case "d": text = "Banana is good! D";  break;
 case "e": text = "Banana is good! E";  break;
 case "f": text = "Banana is good! F";  break;
 case "g": text = "Banana is good! G";  break;
 case "h": text = "Banana is good! H";  break;
 case "i": text = "Banana is good! I";  break;
 default: text = "I have never heard of that fruit...";
}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>text</name>
        <rename>text</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>672</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform>
    <name>JavaScript 2</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

var letter = lower(firstname.charAt(0));

switch (letter) {
 case "a": text = "Banana is good! A";  break;
 case "b": text = "Banana is good! B";  break;
 case "c": text = "Banana is good! C";  break;
 case "d": text = "Banana is good! D";  break;
 case "e": text = "Banana is good! E";  break;
 case "f": text = "Banana is good! F";  break;
 case "g": text = "Banana is good! G";  break;
 case "h": text = "Banana is good! H";  break;
 case "i": text = "Banana is good! I";  break;
 default: text = "I have never heard of that fruit...";
}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>text</name>
        <rename>text</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>672</xloc>
      <yloc>160</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Write to log</name>
    <type>WriteToLog</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <loglevel>log_level_basic</loglevel>
    <displayHeader>Y</displayHeader>
    <limitRows>N</limitRows>
    <limitRowsNumber>0</limitRowsNumber>
    <logmessage/>
    <fields>
      <field>
        <name>firstname</name>
      </field>
      <field>
        <name>text</name>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>1024</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
